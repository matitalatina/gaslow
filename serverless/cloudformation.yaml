---
AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: Gaslow Serverless Stack
Parameters:
  ApiKeyValue:
    Type: String
    Description: Value of the Api Key to use in production
    MinLength: 30
    ConstraintDescription: Should be at least 30 characters
Resources:
  ApiGatewayApi:
    Type: AWS::Serverless::Api
    Properties:
      DefinitionUri: ./simple-proxy-api.yaml
      StageName: prod
      Variables:
        ServerlessExpressLambdaFunctionName: !Ref GaslowLambdaBackend

  ApiKey:
    Type: AWS::ApiGateway::ApiKey
    Properties:
      Description: "Api Key for Gaslow App"
      Enabled: true
      GenerateDistinctId: false
      Value: !Ref ApiKeyValue

  ApiUsagePlan:
    Type: AWS::ApiGateway::UsagePlan
    Properties:
      ApiStages:
        - ApiId: !Ref ApiGatewayApi
          Stage: prod
      Description: !Join
        - " "
        - - !Ref AWS::StackName
          - usage plan
      Quota:
        Limit: 200000
        Period: MONTH
      Throttle:
        BurstLimit: 10
        RateLimit: 10
      UsagePlanName: !Join
        - ""
        - - !Ref AWS::StackName
          - "-usage-plan"

  ApiUsagePlanKey:
    Type: AWS::ApiGateway::UsagePlanKey
    Properties:
      KeyId: !Ref ApiKey
      KeyType: API_KEY
      UsagePlanId: !Ref ApiUsagePlan

  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          Effect: Allow
          Principal:
            Service: lambda.amazonaws.com
          Action: sts:AssumeRole
      Path: "/"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*

  LambdaApiGatewayExecutionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt GaslowLambdaBackend.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Join
        - ""
        - - "arn:aws:execute-api:"
          - !Ref AWS::Region
          - ":"
          - !Ref AWS::AccountId
          - ":"
          - !Ref ApiGatewayApi
          - "/*/*"

  GaslowLambdaBackend:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ../dist/
      Handler: lambda.handler
      MemorySize: 512
      Role: !GetAtt LambdaExecutionRole.Arn
      Runtime: nodejs8.10
      Timeout: 8
      Environment:
        Variables:
          NODE_ENV: production
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /
            Method: ANY
        ProxyApiGreedy:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGatewayApi
            Path: /{proxy+}
            Method: ANY

Outputs:
  LambdaFunctionConsoleUrl:
    Description: Console URL for the Lambda Function.
    Value: !Join
      - ""
      - - https://
        - !Ref AWS::Region
        - ".console.aws.amazon.com/lambda/home?region="
        - !Ref AWS::Region
        - "#/functions/"
        - !Ref GaslowLambdaBackend

  ApiGatewayApiConsoleUrl:
    Description: Console URL for the API Gateway API's Stage.
    Value: !Join
      - ""
      - - https://
        - !Ref AWS::Region
        - ".console.aws.amazon.com/apigateway/home?region="
        - !Ref AWS::Region
        - "#/apis/"
        - !Ref ApiGatewayApi
        - "/stages/prod"

  ApiUrl:
    Description:
      Invoke URL for your API. Clicking this link will perform a GET request
      on the root resource of your API.
    Value: !Join
      - ""
      - - https://
        - !Ref ApiGatewayApi
        - ".execute-api."
        - !Ref AWS::Region
        - ".amazonaws.com/prod/"
